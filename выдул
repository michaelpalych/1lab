def optimized_method(P, B, U, Pl):
    # Множества одежды
    outfits = python_method(P, B, U, Pl)
    optimal_outfits = optimized_method(P, B, U, Pl)

print(f"\n5.2 Оптимизированные наряды (стоимость не более 100): {len(optimal_outfits)} нарядов")

# Выводим список всех нарядов, которые соответствуют условиям
for i, (outfit, cost) in enumerate(optimal_outfits, 1):
    print(f"{i}) {' + '.join(outfit)} = {cost} рублей")

# Если список не пустой — выводим самый оптимальный
if optimal_outfits:
    best_outfit, best_cost = optimal_outfits[0]
    print("\nСамый дешевый наряд:")
    print(f"{' + '.join(best_outfit)} = {best_cost} рублей")
else:
    print("Нет нарядов дешевле 100 рублей.")
    # Цены на одежду
    prices = {
        'Пиджак1': 30,
        'Пиджак2': 40,
        'Блузка1': 20,
        'Блузка2': 25,
        'Юбка1': 15,
        'Юбка2': 20,
        'Платье1': 50,
        'Платье2': 45,
        'Платье3': 60
    }
    
    # Фильтрация по стоимости <= 100
    valid_outfits = [
        (o, sum(prices[item] for item in o)) 
        for o in outfits if sum(prices[item] for item in o) <= 100
    ]
    
    # Сортируем по стоимости
    valid_outfits.sort(key=lambda x: x[1])
    
    # Возвращаем список нарядов
    return [o[0] for o in valid_outfits]
